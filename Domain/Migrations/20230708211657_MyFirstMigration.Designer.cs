// <auto-generated />
using System;
using Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(RideShareDbContext))]
    [Migration("20230708211657_MyFirstMigration")]
    partial class MyFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.Passanger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PassangerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenForThisReservation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripDetailFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripDetailFk");

                    b.ToTable("Passanger");
                });

            modelBuilder.Entity("Domain.Entity.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllowedMaxPassagerCount")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPassangerCount")
                        .HasColumnType("int");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Routate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isThisTripActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("Domain.Entity.TripDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("PassengerCountForThisDistance")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripDetailToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripFK");

                    b.ToTable("TripDetail");
                });

            modelBuilder.Entity("Domain.Entity.Passanger", b =>
                {
                    b.HasOne("Domain.Entity.TripDetail", "TripDetail")
                        .WithMany("PassengerList")
                        .HasForeignKey("TripDetailFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripDetail");
                });

            modelBuilder.Entity("Domain.Entity.TripDetail", b =>
                {
                    b.HasOne("Domain.Entity.Trip", "Trip")
                        .WithMany("TripDetail")
                        .HasForeignKey("TripFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Domain.Entity.Trip", b =>
                {
                    b.Navigation("TripDetail");
                });

            modelBuilder.Entity("Domain.Entity.TripDetail", b =>
                {
                    b.Navigation("PassengerList");
                });
#pragma warning restore 612, 618
        }
    }
}
